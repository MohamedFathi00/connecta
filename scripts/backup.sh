#!/bin/bash

# =================================
# ุณูุฑูุจุช ุงููุณุฎ ุงูุงุญุชูุงุทู ุงูุฐูู
# =================================

set -e

# ุงูุฃููุงู
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# ุงููุชุบูุฑุงุช
BACKUP_DIR="/backups"
DATE=$(date +%Y%m%d_%H%M%S)
KEEP_DAYS=30
DB_CONTAINER="social_media_db"
REDIS_CONTAINER="social_media_redis"

# ุฏูุงู ูุณุงุนุฏุฉ
log_info() { echo -e "${BLUE}[INFO]${NC} $1"; }
log_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
log_warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
log_error() { echo -e "${RED}[ERROR]${NC} $1"; }

# ุฅูุดุงุก ูุฌูุฏุงุช ุงููุณุฎ ุงูุงุญุชูุงุทู
create_backup_dirs() {
    log_info "ุฅูุดุงุก ูุฌูุฏุงุช ุงููุณุฎ ุงูุงุญุชูุงุทู..."
    mkdir -p $BACKUP_DIR/{database,redis,uploads,configs}
    log_success "ุชู ุฅูุดุงุก ุงููุฌูุฏุงุช"
}

# ูุณุฎ ุงุญุชูุงุทู ููุงุนุฏุฉ ุงูุจูุงูุงุช
backup_database() {
    log_info "ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ููุงุนุฏุฉ ุงูุจูุงูุงุช..."
    
    if docker ps | grep -q $DB_CONTAINER; then
        docker exec $DB_CONTAINER pg_dump -U postgres social_media > $BACKUP_DIR/database/db_backup_$DATE.sql
        gzip $BACKUP_DIR/database/db_backup_$DATE.sql
        log_success "ุชู ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ููุงุนุฏุฉ ุงูุจูุงูุงุช"
    else
        log_error "ุญุงููุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุบูุฑ ูุชุงุญุฉ"
        return 1
    fi
}

# ูุณุฎ ุงุญุชูุงุทู ูู Redis
backup_redis() {
    log_info "ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ูู Redis..."
    
    if docker ps | grep -q $REDIS_CONTAINER; then
        docker exec $REDIS_CONTAINER redis-cli BGSAVE
        sleep 5
        docker cp $REDIS_CONTAINER:/data/dump.rdb $BACKUP_DIR/redis/redis_backup_$DATE.rdb
        gzip $BACKUP_DIR/redis/redis_backup_$DATE.rdb
        log_success "ุชู ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ูู Redis"
    else
        log_warning "ุญุงููุฉ Redis ุบูุฑ ูุชุงุญุฉ"
    fi
}

# ูุณุฎ ุงุญุชูุงุทู ูููููุงุช ุงููุฑููุนุฉ
backup_uploads() {
    log_info "ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ูููููุงุช ุงููุฑููุนุฉ..."
    
    if [ -d "./uploads" ]; then
        tar -czf $BACKUP_DIR/uploads/uploads_backup_$DATE.tar.gz ./uploads
        log_success "ุชู ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ูููููุงุช ุงููุฑููุนุฉ"
    else
        log_warning "ูุฌูุฏ ุงููููุงุช ุงููุฑููุนุฉ ุบูุฑ ููุฌูุฏ"
    fi
}

# ูุณุฎ ุงุญุชูุงุทู ููุฅุนุฏุงุฏุงุช
backup_configs() {
    log_info "ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ููุฅุนุฏุงุฏุงุช..."
    
    cp .env.production $BACKUP_DIR/configs/env_backup_$DATE 2>/dev/null || log_warning "ููู .env.production ุบูุฑ ููุฌูุฏ"
    cp docker-compose.prod.yml $BACKUP_DIR/configs/docker-compose_backup_$DATE.yml 2>/dev/null || log_warning "ููู docker-compose.prod.yml ุบูุฑ ููุฌูุฏ"
    cp -r nginx/ $BACKUP_DIR/configs/nginx_backup_$DATE/ 2>/dev/null || log_warning "ูุฌูุฏ nginx ุบูุฑ ููุฌูุฏ"
    
    log_success "ุชู ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ููุฅุนุฏุงุฏุงุช"
}

# ุฑูุน ููุชุฎุฒูู ุงูุณุญุงุจู (ุงุฎุชูุงุฑู)
upload_to_cloud() {
    log_info "ุฑูุน ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ ููุชุฎุฒูู ุงูุณุญุงุจู..."
    
    # AWS S3
    if command -v aws &> /dev/null && [ ! -z "$AWS_S3_BACKUP_BUCKET" ]; then
        aws s3 sync $BACKUP_DIR s3://$AWS_S3_BACKUP_BUCKET/backups/$(date +%Y/%m/%d)/ --delete
        log_success "ุชู ุฑูุน ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ ุฅูู AWS S3"
    fi
    
    # Google Cloud Storage
    if command -v gsutil &> /dev/null && [ ! -z "$GCS_BACKUP_BUCKET" ]; then
        gsutil -m rsync -r -d $BACKUP_DIR gs://$GCS_BACKUP_BUCKET/backups/$(date +%Y/%m/%d)/
        log_success "ุชู ุฑูุน ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ ุฅูู Google Cloud Storage"
    fi
}

# ุญุฐู ุงููุณุฎ ุงููุฏููุฉ
cleanup_old_backups() {
    log_info "ุญุฐู ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ ุงููุฏููุฉ (ุฃูุซุฑ ูู $KEEP_DAYS ููู)..."
    
    find $BACKUP_DIR -type f -mtime +$KEEP_DAYS -delete
    find $BACKUP_DIR -type d -empty -delete
    
    log_success "ุชู ุญุฐู ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ ุงููุฏููุฉ"
}

# ุฅูุดุงุก ุชูุฑูุฑ ุงููุณุฎ ุงูุงุญุชูุงุทู
create_backup_report() {
    log_info "ุฅูุดุงุก ุชูุฑูุฑ ุงููุณุฎ ุงูุงุญุชูุงุทู..."
    
    REPORT_FILE="$BACKUP_DIR/backup_report_$DATE.txt"
    
    cat > $REPORT_FILE << EOF
=================================
ุชูุฑูุฑ ุงููุณุฎ ุงูุงุญุชูุงุทู
=================================
ุงูุชุงุฑูุฎ: $(date)
ุงูุฎุงุฏู: $(hostname)
ุงููุณุชุฎุฏู: $(whoami)

ุฃุญุฌุงู ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ:
$(du -sh $BACKUP_DIR/*/*)

ูุณุงุญุฉ ุงููุฑุต ุงููุชุงุญุฉ:
$(df -h)

ุญุงูุฉ ุงูุฎุฏูุงุช:
$(docker-compose -f docker-compose.prod.yml ps)

ุณุฌู ุงููุณุฎ ุงูุงุญุชูุงุทู:
- ุชู ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ููุงุนุฏุฉ ุงูุจูุงูุงุช
- ุชู ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ูู Redis
- ุชู ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ูููููุงุช ุงููุฑููุนุฉ
- ุชู ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ููุฅุนุฏุงุฏุงุช

=================================
EOF

    log_success "ุชู ุฅูุดุงุก ุชูุฑูุฑ ุงููุณุฎ ุงูุงุญุชูุงุทู: $REPORT_FILE"
}

# ุฅุฑุณุงู ุฅุดุนุงุฑ
send_notification() {
    local status=$1
    local message=$2
    
    # Slack notification
    if [ ! -z "$SLACK_WEBHOOK_URL" ]; then
        curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"$message\"}" \
            $SLACK_WEBHOOK_URL
    fi
    
    # Email notification
    if command -v mail &> /dev/null && [ ! -z "$NOTIFICATION_EMAIL" ]; then
        echo "$message" | mail -s "ุชูุฑูุฑ ุงููุณุฎ ุงูุงุญุชูุงุทู - $status" $NOTIFICATION_EMAIL
    fi
}

# ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ
main() {
    log_info "๐ ุจุฏุก ุนูููุฉ ุงููุณุฎ ุงูุงุญุชูุงุทู..."
    
    START_TIME=$(date +%s)
    
    create_backup_dirs
    
    # ุชูููุฐ ุงููุณุฎ ุงูุงุญุชูุงุทู
    if backup_database && backup_redis && backup_uploads && backup_configs; then
        upload_to_cloud
        cleanup_old_backups
        create_backup_report
        
        END_TIME=$(date +%s)
        DURATION=$((END_TIME - START_TIME))
        
        log_success "โ ุชู ุฅูุฌุงุฒ ุงููุณุฎ ุงูุงุญุชูุงุทู ุจูุฌุงุญ ูู $DURATION ุซุงููุฉ"
        send_notification "ูุฌุญ" "ุชู ุฅูุฌุงุฒ ุงููุณุฎ ุงูุงุญุชูุงุทู ุจูุฌุงุญ ูู $DURATION ุซุงููุฉ"
    else
        log_error "โ ูุดู ูู ุฅูุฌุงุฒ ุงููุณุฎ ุงูุงุญุชูุงุทู"
        send_notification "ูุดู" "ูุดู ูู ุฅูุฌุงุฒ ุงููุณุฎ ุงูุงุญุชูุงุทู - ูุฑุฌู ุงูุชุญูู ูู ุงูุณุฌูุงุช"
        exit 1
    fi
}

# ุชุดุบูู ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ
main "$@"