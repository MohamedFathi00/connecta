#!/bin/bash

# =================================
# ุณูุฑูุจุช ุงููุดุฑ ุงูุขูู ููููุตุฉ
# =================================

set -e  # ุชููู ุนูุฏ ุฃู ุฎุทุฃ

# ุงูุฃููุงู ููุฑุณุงุฆู
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # ุจุฏูู ููู

# ุงููุชุบูุฑุงุช
APP_NAME="Social Media Platform"
DOCKER_COMPOSE_FILE="docker-compose.prod.yml"
ENV_FILE=".env.production"

# ุฏูุงู ูุณุงุนุฏุฉ
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# ุงูุชุญูู ูู ูุชุทูุจุงุช ุงููุธุงู
check_requirements() {
    log_info "ุงูุชุญูู ูู ูุชุทูุจุงุช ุงููุธุงู..."
    
    # ุงูุชุญูู ูู Docker
    if ! command -v docker &> /dev/null; then
        log_error "Docker ุบูุฑ ูุซุจุช. ูุฑุฌู ุชุซุจูุช Docker ุฃููุงู."
        exit 1
    fi
    
    # ุงูุชุญูู ูู Docker Compose
    if ! command -v docker-compose &> /dev/null; then
        log_error "Docker Compose ุบูุฑ ูุซุจุช. ูุฑุฌู ุชุซุจูุช Docker Compose ุฃููุงู."
        exit 1
    fi
    
    log_success "ุฌููุน ุงููุชุทูุจุงุช ูุชููุฑุฉ"
}

# ุงูุชุญูู ูู ููู ุงูุจูุฆุฉ
check_env_file() {
    log_info "ุงูุชุญูู ูู ููู ุงูุจูุฆุฉ..."
    
    if [ ! -f "$ENV_FILE" ]; then
        log_error "ููู ุงูุจูุฆุฉ $ENV_FILE ุบูุฑ ููุฌูุฏ"
        log_info "ูุฑุฌู ูุณุฎ .env.production.example ุฅูู .env.production ูุชุนุฏูู ุงูููู"
        exit 1
    fi
    
    # ุงูุชุญูู ูู ุงููุชุบูุฑุงุช ุงููุทููุจุฉ
    required_vars=("DB_PASSWORD" "JWT_SECRET" "REDIS_PASSWORD")
    for var in "${required_vars[@]}"; do
        if ! grep -q "^$var=" "$ENV_FILE" || grep -q "^$var=$" "$ENV_FILE"; then
            log_error "ุงููุชุบูุฑ $var ุบูุฑ ูุญุฏุฏ ูู ููู ุงูุจูุฆุฉ"
            exit 1
        fi
    done
    
    log_success "ููู ุงูุจูุฆุฉ ุตุญูุญ"
}

# ุฅุนุฏุงุฏ ุดูุงุฏุงุช SSL
setup_ssl() {
    log_info "ุฅุนุฏุงุฏ ุดูุงุฏุงุช SSL..."
    
    if [ ! -d "nginx/ssl" ]; then
        mkdir -p nginx/ssl
    fi
    
    # ุฅูุดุงุก ุดูุงุฏุฉ ูููุนุฉ ุฐุงุชูุงู ููุชุทููุฑ (ุงุณุชุจุฏููุง ุจุดูุงุฏุฉ ุญููููุฉ ููุฅูุชุงุฌ)
    if [ ! -f "nginx/ssl/certificate.crt" ] || [ ! -f "nginx/ssl/private.key" ]; then
        log_warning "ุฅูุดุงุก ุดูุงุฏุฉ SSL ูููุนุฉ ุฐุงุชูุงู ููุชุทููุฑ..."
        log_warning "ููุฅูุชุงุฌุ ุงุณุชุจุฏููุง ุจุดูุงุฏุฉ ุญููููุฉ ูู Let's Encrypt ุฃู ูุฒูุฏ ุขุฎุฑ"
        
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
            -keyout nginx/ssl/private.key \
            -out nginx/ssl/certificate.crt \
            -subj "/C=US/ST=State/L=City/O=Organization/CN=yourapp.com"
        
        log_success "ุชู ุฅูุดุงุก ุดูุงุฏุฉ SSL"
    else
        log_success "ุดูุงุฏุงุช SSL ููุฌูุฏุฉ"
    fi
}

# ุจูุงุก ุงูุตูุฑ
build_images() {
    log_info "ุจูุงุก ุตูุฑ Docker..."
    
    # ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
    export $(grep -v '^#' $ENV_FILE | xargs)
    
    # ุจูุงุก ุงูุตูุฑ
    docker-compose -f $DOCKER_COMPOSE_FILE build --no-cache
    
    log_success "ุชู ุจูุงุก ุงูุตูุฑ ุจูุฌุงุญ"
}

# ุชุดุบูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุฃููุงู
start_database() {
    log_info "ุชุดุบูู ูุงุนุฏุฉ ุงูุจูุงูุงุช..."
    
    docker-compose -f $DOCKER_COMPOSE_FILE up -d postgres redis
    
    # ุงูุชุธุงุฑ ุฌุงูุฒูุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช
    log_info "ุงูุชุธุงุฑ ุฌุงูุฒูุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช..."
    until docker-compose -f $DOCKER_COMPOSE_FILE exec postgres pg_isready; do
        sleep 2
    done
    
    log_success "ูุงุนุฏุฉ ุงูุจูุงูุงุช ุฌุงูุฒุฉ"
}

# ุชุดุบูู ุงูุชุทุจูู
start_application() {
    log_info "ุชุดุบูู ุงูุชุทุจูู..."
    
    # ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
    export $(grep -v '^#' $ENV_FILE | xargs)
    
    # ุชุดุบูู ุฌููุน ุงูุฎุฏูุงุช
    docker-compose -f $DOCKER_COMPOSE_FILE up -d
    
    # ุงูุชุธุงุฑ ุฌุงูุฒูุฉ ุงูุฎุฏูุงุช
    log_info "ุงูุชุธุงุฑ ุฌุงูุฒูุฉ ุงูุฎุฏูุงุช..."
    sleep 30
    
    # ุงูุชุญูู ูู ุญุงูุฉ ุงูุฎุฏูุงุช
    if docker-compose -f $DOCKER_COMPOSE_FILE ps | grep -q "Up"; then
        log_success "ุชู ุชุดุบูู ุงูุชุทุจูู ุจูุฌุงุญ"
    else
        log_error "ูุดู ูู ุชุดุบูู ุงูุชุทุจูู"
        docker-compose -f $DOCKER_COMPOSE_FILE logs
        exit 1
    fi
}

# ุนุฑุถ ูุนูููุงุช ุงููุดุฑ
show_deployment_info() {
    log_success "ุชู ูุดุฑ $APP_NAME ุจูุฌุงุญ!"
    echo ""
    echo "ูุนูููุงุช ุงููุดุฑ:"
    echo "==============="
    echo "๐ ุงููููุน ุงูุฑุฆูุณู: http://localhost:3000"
    echo "๐ง ููุญุฉ ุงูุฅุฏุงุฑุฉ: http://localhost:3000/admin"
    echo "๐ Grafana: http://localhost:3001 (admin/admin)"
    echo "๐ Prometheus: http://localhost:9090"
    echo ""
    echo "ุฃูุงูุฑ ูููุฏุฉ:"
    echo "============="
    echo "ุนุฑุถ ุญุงูุฉ ุงูุฎุฏูุงุช: docker-compose -f $DOCKER_COMPOSE_FILE ps"
    echo "ุนุฑุถ ุงูุณุฌูุงุช: docker-compose -f $DOCKER_COMPOSE_FILE logs -f"
    echo "ุฅููุงู ุงูุชุทุจูู: docker-compose -f $DOCKER_COMPOSE_FILE down"
    echo "ุฅุนุงุฏุฉ ุชุดุบูู: docker-compose -f $DOCKER_COMPOSE_FILE restart"
    echo ""
    log_warning "ูุง ุชูุณ:"
    echo "- ุชุญุฏูุซ ุงููุทุงู ูู ููู ุงูุจูุฆุฉ"
    echo "- ุงูุญุตูู ุนูู ุดูุงุฏุฉ SSL ุญููููุฉ ููุฅูุชุงุฌ"
    echo "- ุฅุนุฏุงุฏ ุงููุณุฎ ุงูุงุญุชูุงุทู"
    echo "- ูุฑุงูุจุฉ ุงูุณุฌูุงุช ูุงูุฃุฏุงุก"
}

# ุงูุชูุธูู ูู ุญุงูุฉ ุงูุฎุทุฃ
cleanup_on_error() {
    log_error "ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงููุดุฑ"
    log_info "ุฅููุงู ุงูุฎุฏูุงุช..."
    docker-compose -f $DOCKER_COMPOSE_FILE down
    exit 1
}

# ุฅุนุฏุงุฏ ูุนุงูุฌ ุงูุฃุฎุทุงุก
trap cleanup_on_error ERR

# ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ
main() {
    echo "================================================"
    echo "๐ ุจุฏุก ูุดุฑ $APP_NAME"
    echo "================================================"
    
    check_requirements
    check_env_file
    setup_ssl
    build_images
    start_database
    start_application
    show_deployment_info
    
    echo "================================================"
    echo "โ ุชู ุงููุดุฑ ุจูุฌุงุญ!"
    echo "================================================"
}

# ุชุดุบูู ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ
main "$@"